//Forces component to render on server side. Not sure if this is necessary. 
//TODO - research if this is needed and why.
'use client'; 

import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import io from 'socket.io-client';
import { useState } from 'react';
import { useEffect } from 'react';
import { text } from 'stream/consumers';
let socket;

const inter = Inter({ subsets: ['latin'] })

export default function Home() {

  const [messages, setMessages] = useState(['']); //store data recieved through socket frmo server

  async function socketInitializer(){
    socket = await io('http://localhost:4000/'); //make socket connection 
    socket.on('connect', () => {
      console.log('connected'); //print out when socket is connected
    })
    socket.on('message', msg => { //when data recieved concat messages state with inbound traces
      const serverTraces = JSON.parse(msg);
      serverTraces.forEach(el=>{
        setMessages(messages=>[...messages,JSON.stringify(el)]);
      });
    })
  }
  
  //when component mounts initialize socket 
  useEffect(() => {
    socketInitializer()
  },[]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <h1 style={{textAlign: "center", paddingTop: "20px"}}> Traces </h1>
        {messages.map((el)=>
          <div>
             <p>{el}</p>
             <br></br>
          </div>
        )}
        <br></br>
      </main>
    </>
  )
}
